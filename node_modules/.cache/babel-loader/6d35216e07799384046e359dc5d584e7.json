{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\new\\\\employee-management-system-frontend-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\new\\\\employee-management-system-frontend-react\\\\src\\\\component\\\\CompanyTable.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  margin-top: 45px;\\n  border-color: red;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport \"./AdminCompanyTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nconst override = css(_templateObject());\n\nclass AdminCompanyTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      companyData: [],\n      loading: true,\n      columnDefs: [{\n        headerName: \"Company Name\",\n        field: \"CompanyName\",\n        sortable: true,\n        width: 150 // filter: true ,\n\n      }, {\n        headerName: \"Address\",\n        field: \"Address\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"Country\",\n        field: \"CountryName\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"State\",\n        field: \"StateName\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"City\",\n        field: \"CityName\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"Postal Code\",\n        field: \"PostalCode\",\n        sortable: true,\n        width: 120 // filter: true ,\n\n      }, {\n        headerName: \"Website\",\n        field: \"Website\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"Email\",\n        field: \"Email\",\n        sortable: true,\n        width: 150 // filter: true ,\n\n      }, {\n        headerName: \"Contact Person\",\n        field: \"ContactPerson\",\n        sortable: true,\n        width: 140 // filter: true ,\n\n      }, {\n        headerName: \"Contact No\",\n        field: \"ContactNo\",\n        sortable: true,\n        width: 120 // filter: true ,\n\n      }, {\n        headerName: \"Fax No\",\n        field: \"FaxNo\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"Pan No\",\n        field: \"PanNo\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"GST No\",\n        field: \"GSTNo\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"CIN No\",\n        field: \"CINNo\",\n        sortable: true // filter: true ,\n\n      }, {\n        headerName: \"\",\n        field: \"edit\",\n        filter: false,\n        width: 30,\n        cellRendererFramework: this.renderEditButton.bind(this)\n      }, {\n        headerName: \"\",\n        field: \"delete\",\n        filter: false,\n        width: 30,\n        cellRendererFramework: this.renderButton.bind(this)\n      }],\n      rowData: [],\n      defaultColDef: {\n        resizable: true,\n        width: 110,\n        filter: \"agTextColumnFilter\" // filter: true ,\n\n      },\n      getRowHeight: function (params) {\n        return 35;\n      }\n    };\n    this.companyObj = [];\n    this.rowDataT = [];\n\n    this.loadCompanyData = () => {\n      axios.get(\"https://employee-management-fk-api.herokuapp.com/api/company\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.companyObj = response.data;\n        console.log(\"response\", response.data);\n        this.setState({\n          companyData: response.data\n        });\n        this.setState({\n          loading: false\n        });\n        this.rowDataT = [];\n        this.companyObj.map(data => {\n          let temp = {\n            data,\n            CompanyName: data[\"CompanyName\"],\n            Address: data[\"Address\"],\n            CountryName: data[\"city\"][0][\"state\"][0][\"country\"][0][\"CountryName\"],\n            StateName: data[\"city\"][0][\"state\"][0][\"StateName\"],\n            CityName: data[\"city\"][0][\"CityName\"],\n            PostalCode: data[\"PostalCode\"],\n            Website: data[\"Website\"],\n            Email: data[\"Email\"],\n            ContactPerson: data[\"ContactPerson\"],\n            ContactNo: data[\"ContactNo\"],\n            FaxNo: data[\"FaxNo\"],\n            PanNo: data[\"PanNo\"],\n            GSTNo: data[\"GSTNo\"],\n            CINNo: data[\"CINNo\"]\n          };\n          this.rowDataT.push(temp);\n        });\n        this.setState({\n          rowData: this.rowDataT\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onCompanyDelete = e => {\n      console.log(e);\n\n      if (window.confirm(\"Are you sure to delete this record? \") == true) {\n        axios.delete(\"https://employee-management-fk-api.herokuapp.com/api/company/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }).then(res => {\n          this.componentDidMount();\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadCompanyData();\n  }\n\n  renderButton(params) {\n    console.log(params);\n    return React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      onClick: () => this.onCompanyDelete(params.data.data[\"_id\"]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    });\n  }\n\n  renderEditButton(params) {\n    console.log(params);\n    return React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      onClick: () => this.props.onEditCompany(params.data.data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"table-outer-div-scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"role-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Company Details\"), React.createElement(Button, {\n      variant: \"primary\",\n      id: \"add-button\",\n      onClick: this.props.onAddCompany,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      id: \"plus-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \"Add\"), React.createElement(\"div\", {\n      id: \"clear-both\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), !this.state.loading ? React.createElement(\"div\", {\n      id: \"table-div\",\n      className: \"ag-theme-balham\" //   style={\n      //     {\n      //     height: \"500px\",\n      //     width: \"100%\"\n      //   }\n      // }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(AgGridReact, {\n      columnDefs: this.state.columnDefs,\n      defaultColDef: this.state.defaultColDef,\n      columnTypes: this.state.columnTypes,\n      rowData: this.state.rowData // floatingFilter={true}\n      // onGridReady={this.onGridReady}\n      ,\n      pagination: true,\n      paginationPageSize: 10,\n      getRowHeight: this.state.getRowHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      id: \"loading-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(RingLoader, {\n      css: override,\n      sizeUnit: \"px\",\n      size: 50,\n      color: \"#0000ff\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AdminCompanyTable;","map":{"version":3,"sources":["C:\\Users\\INTEL\\Desktop\\new\\employee-management-system-frontend-react\\src\\component\\CompanyTable.jsx"],"names":["React","Component","axios","FontAwesomeIcon","faPlus","faTrash","faEdit","RingLoader","css","Button","AgGridReact","override","AdminCompanyTable","state","companyData","loading","columnDefs","headerName","field","sortable","width","filter","cellRendererFramework","renderEditButton","bind","renderButton","rowData","defaultColDef","resizable","getRowHeight","params","companyObj","rowDataT","loadCompanyData","get","headers","authorization","localStorage","getItem","then","response","data","console","log","setState","map","temp","CompanyName","Address","CountryName","StateName","CityName","PostalCode","Website","Email","ContactPerson","ContactNo","FaxNo","PanNo","GSTNo","CINNo","push","catch","error","onCompanyDelete","e","window","confirm","delete","res","componentDidMount","err","props","onEditCompany","render","onAddCompany","columnTypes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AdminCompanyTable.css\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\n\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\nclass AdminCompanyTable extends Component {\r\n  state = {\r\n    companyData: [],\r\n    loading: true,\r\n\r\n    columnDefs: [\r\n\r\n      {\r\n        headerName: \"Company Name\",\r\n        field: \"CompanyName\",\r\n        sortable: true,\r\n        width: 150,\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Address\",\r\n        field: \"Address\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Country\",\r\n        field: \"CountryName\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"State\",\r\n        field: \"StateName\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"City\",\r\n        field: \"CityName\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Postal Code\",\r\n        field: \"PostalCode\",\r\n        sortable: true,\r\n\r\n\r\n        width: 120,\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Website\",\r\n        field: \"Website\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"Email\",\r\n        sortable: true,\r\n        width: 150,\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Contact Person\",\r\n        field: \"ContactPerson\",\r\n        sortable: true,\r\n\r\n        width: 140,\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Contact No\",\r\n        field: \"ContactNo\",\r\n        sortable: true,\r\n\r\n        width: 120,\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Fax No\",\r\n        field: \"FaxNo\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"Pan No\",\r\n        field: \"PanNo\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"GST No\",\r\n        field: \"GSTNo\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n      {\r\n        headerName: \"CIN No\",\r\n        field: \"CINNo\",\r\n        sortable: true\r\n        // filter: true ,\r\n      },\r\n\r\n\r\n      {\r\n        headerName: \"\",\r\n        field: \"edit\",\r\n        filter: false,\r\n        width: 30,\r\n        cellRendererFramework: this.renderEditButton.bind(this)\r\n      },\r\n      {\r\n        headerName: \"\",\r\n        field: \"delete\",\r\n        filter: false,\r\n        width: 30,\r\n        cellRendererFramework: this.renderButton.bind(this)\r\n      }\r\n    ],\r\n    rowData: [],\r\n    defaultColDef: {\r\n      resizable: true,\r\n      width: 110,\r\n      filter: \"agTextColumnFilter\"\r\n      // filter: true ,\r\n    },\r\n    getRowHeight: function (params) {\r\n      return 35;\r\n    }\r\n\r\n\r\n  };\r\n  companyObj = [];\r\n  rowDataT = [];\r\n\r\n  loadCompanyData = () => {\r\n    axios\r\n      .get(\"https://employee-management-fk-api.herokuapp.com/api/company\", {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.companyObj = response.data;\r\n        console.log(\"response\", response.data);\r\n        this.setState({ companyData: response.data });\r\n        this.setState({ loading: false });\r\n\r\n        this.rowDataT = [];\r\n\r\n        this.companyObj.map(data => {\r\n          let temp = {\r\n            data,\r\n            CompanyName: data[\"CompanyName\"],\r\n            Address: data[\"Address\"],\r\n            CountryName: data[\"city\"][0][\"state\"][0][\"country\"][0][\r\n              \"CountryName\"\r\n            ],\r\n            StateName: data[\"city\"][0][\"state\"][0][\"StateName\"],\r\n            CityName: data[\"city\"][0][\"CityName\"],\r\n            PostalCode: data[\"PostalCode\"],\r\n            Website: data[\"Website\"],\r\n            Email: data[\"Email\"],\r\n            ContactPerson: data[\"ContactPerson\"],\r\n            ContactNo: data[\"ContactNo\"],\r\n            FaxNo: data[\"FaxNo\"],\r\n            PanNo: data[\"PanNo\"],\r\n            GSTNo: data[\"GSTNo\"],\r\n            CINNo: data[\"CINNo\"],\r\n\r\n          };\r\n\r\n          this.rowDataT.push(temp);\r\n        });\r\n        this.setState({ rowData: this.rowDataT });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  onCompanyDelete = e => {\r\n    console.log(e);\r\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\r\n      axios\r\n        .delete(\"https://employee-management-fk-api.herokuapp.com/api/company/\" + e, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          this.componentDidMount();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.loadCompanyData();\r\n  }\r\n\r\n  renderButton(params) {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faTrash}\r\n        onClick={() =>\r\n          this.onCompanyDelete(params.data.data[\"_id\"])\r\n        }\r\n      />\r\n    );\r\n  }\r\n  renderEditButton(params) {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => this.props.onEditCompany(params.data.data)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"table-outer-div-scroll\">\r\n        <h2 id=\"role-title\">Company Details</h2>\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          id=\"add-button\"\r\n          onClick={this.props.onAddCompany}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\r\n          Add\r\n        </Button>\r\n\r\n        <div id=\"clear-both\" />\r\n\r\n        {!this.state.loading ? (\r\n          <div\r\n            id=\"table-div\"\r\n            className=\"ag-theme-balham\"\r\n          //   style={\r\n          //     {\r\n          //     height: \"500px\",\r\n          //     width: \"100%\"\r\n          //   }\r\n          // }\r\n          >\r\n            <AgGridReact\r\n              columnDefs={this.state.columnDefs}\r\n              defaultColDef={this.state.defaultColDef}\r\n              columnTypes={this.state.columnTypes}\r\n              rowData={this.state.rowData}\r\n              // floatingFilter={true}\r\n              // onGridReady={this.onGridReady}\r\n              pagination={true}\r\n              paginationPageSize={10}\r\n              getRowHeight={this.state.getRowHeight}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <div id=\"loading-bar\">\r\n              <RingLoader\r\n                css={override}\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#0000ff\"}\r\n                loading={true}\r\n              />\r\n            </div>\r\n          )}\r\n        {/*         \r\n        <div id=\"inner-table-div\">\r\n          <table id=\"role-table\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"6.667%\">Company Name</th>\r\n                <th width=\"6.667%\">Address</th>\r\n                <th width=\"6.667%\">Country</th>\r\n                <th width=\"6.667%\">State</th>\r\n                <th width=\"6.667%\">City</th>\r\n                <th width=\"6.667%\">Postal Code</th>\r\n                <th width=\"6.667%\">Website</th>\r\n                <th width=\"6.667%\">Email</th>\r\n                <th width=\"6.667%\">ContactPerson</th>\r\n                <th width=\"6.667%\">ContactNo</th>\r\n                <th width=\"6.667%\">FaxNo</th>\r\n                <th width=\"6.667%\">PanNo</th>\r\n                <th width=\"6.667%\">GST No</th>\r\n                <th width=\"6.667%\">CIN No</th>\r\n                <th width=\"3.33%\" />\r\n                <th width=\"3.33%\" />\r\n              </tr>\r\n            </thead>\r\n\r\n            {!this.state.loading ? (\r\n              <React.Fragment>\r\n                {this.companyObj.map((data, index) => (\r\n                  <tbody key={index}>\r\n                    <tr>\r\n                      <td>{data[\"CompanyName\"]}</td>\r\n                      <td>{data[\"Address\"]}</td>\r\n                      <td>\r\n                        {\r\n                          data[\"city\"][0][\"state\"][0][\"country\"][0][\r\n                            \"CountryName\"\r\n                          ]\r\n                        }\r\n                      </td>\r\n                      <td>{data[\"city\"][0][\"state\"][0][\"StateName\"]}</td>\r\n                      <td>{data[\"city\"][0][\"CityName\"]}</td>\r\n                      <td>{data[\"PostalCode\"]}</td>\r\n                      <td>{data[\"Website\"]}</td>\r\n                      <td>{data[\"Email\"]}</td>\r\n                      <td>{data[\"ContactPerson\"]}</td>\r\n                      <td>{data[\"ContactNo\"]}</td>\r\n                      <td>{data[\"FaxNo\"]}</td>\r\n                      <td>{data[\"PanNo\"]}</td>\r\n                      <td>{data[\"GSTNo\"]}</td>\r\n                      <td>{data[\"CINNo\"]}</td>\r\n                      <td>\r\n                        <FontAwesomeIcon\r\n                          icon={faEdit}\r\n                          onClick={() => this.props.onEditCompany(data)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <FontAwesomeIcon\r\n                          icon={faTrash}\r\n                          onClick={() => this.onCompanyDelete(data[\"_id\"])}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n                {console.log(\"final\", this.companyObj)}\r\n              </React.Fragment>\r\n            ) : (\r\n              <tbody>\r\n                <tr>\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td>\r\n                    <div id=\"loading-bar\">\r\n                      <BarLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={150}\r\n                        color={\"#0000ff\"}\r\n                        loading={true}\r\n                      />\r\n                    </div>\r\n                  </td>\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n                  <td />\r\n\r\n                  <td />\r\n                  <td />\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminCompanyTable;\r\n"]},"metadata":{},"sourceType":"module"}