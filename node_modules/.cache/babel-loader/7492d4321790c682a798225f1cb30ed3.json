{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\new\\\\employee-management-system-frontend-react\\\\src\\\\component\\\\CityFormEdit.jsx\";\nimport React, { Component } from \"react\"; // import \"./CityForm.css\";\n\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\"; // import { Form,Button } from \"react-bootstrap\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass CityForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      CityData: this.props.editData[\"CityName\"],\n      stateData: [],\n      filteredStateData: [],\n      countryData: [],\n      filteredCountryData: []\n    };\n\n    this.loadCountryInfo = () => {\n      axios.get(\"https://employee-management-fk-api.herokuapp.com/api/country\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.setState({\n          countryData: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.loadStateInfo = () => {\n      axios.get(\"https://employee-management-fk-api.herokuapp.com/api/state\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.setState({\n          stateData: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onSelectCountry = (e, data) => {\n      return this.props.editData[\"state\"][0][\"country\"][0][\"_id\"] == data[\"_id\"];\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      CityData: e.target.value\n    });\n  }\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(data => data[\"country\"][0][\"_id\"] == currentCountry);\n    this.setState({\n      filteredStateData: filteredState\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"role-form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Edit City Details\"), React.createElement(\"div\", {\n      id: \"role-form-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"form\",\n      onSubmit: e => this.props.onCityEditUpdate(this.props.editData, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"country\",\n      onChange: this.onCountryChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Select your option\"), this.state.countryData.map((data, index) => React.createElement(\"option\", {\n      value: data[\"_id\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, data[\"CountryName\"]))))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"State\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"state\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select your option\"), this.state.filteredStateData.map((data, index) => React.createElement(\"option\", {\n      value: data[\"_id\"],\n      selected: this.props.editData[\"state\"][0][\"_id\"] == data[\"_id\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, data[\"StateName\"]))))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"City\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"Text\",\n      placeholder: \"City\",\n      name: \"City\",\n      required: true,\n      onChange: value => this.onChange(value),\n      value: this.state.CityData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Update\"))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-cancel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      id: \"form-cancel-button-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"reset\",\n      onClick: this.props.onFormEditClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"cancel\"))))));\n  }\n\n}\n\nexport default CityForm; // onChange={value => this.onChange(value)}","map":{"version":3,"sources":["C:\\Users\\INTEL\\Desktop\\new\\employee-management-system-frontend-react\\src\\component\\CityFormEdit.jsx"],"names":["React","Component","HashRouter","Router","Route","Link","Form","Button","Col","Row","axios","CityForm","state","CityData","props","editData","stateData","filteredStateData","countryData","filteredCountryData","loadCountryInfo","get","headers","authorization","localStorage","getItem","then","response","setState","data","catch","error","console","log","loadStateInfo","onSelectCountry","e","onChange","target","value","componentWillMount","onCountryChange","currentCountry","filteredState","filter","render","onCityEditUpdate","bind","map","index","span","offset","onFormEditClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import \"./CityForm.css\";\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import { Form,Button } from \"react-bootstrap\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass CityForm extends Component {\r\n  state = {\r\n    CityData: this.props.editData[\"CityName\"],\r\n    stateData: [],\r\n    filteredStateData: [],\r\n    countryData: [],\r\n    filteredCountryData: []\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ CityData: e.target.value });\r\n  }\r\n  loadCountryInfo = () => {\r\n    axios\r\n      .get(\"https://employee-management-fk-api.herokuapp.com/api/country\", {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ countryData: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  loadStateInfo = () => {\r\n    axios\r\n      .get(\"https://employee-management-fk-api.herokuapp.com/api/state\", {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ stateData: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.loadCountryInfo();\r\n    this.loadStateInfo();\r\n  }\r\n  onCountryChange(e) {\r\n    console.log(e.target.value);\r\n    let currentCountry = e.target.value;\r\n    let filteredState = this.state.stateData.filter(\r\n      data => data[\"country\"][0][\"_id\"] == currentCountry\r\n    );\r\n    this.setState({ filteredStateData: filteredState });\r\n  }\r\n\r\n  onSelectCountry = (e, data) => {\r\n    return this.props.editData[\"state\"][0][\"country\"][0][\"_id\"] == data[\"_id\"];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 id=\"role-form-title\">Edit City Details</h2>\r\n\r\n        <div id=\"role-form-outer-div\">\r\n          <Form\r\n            id=\"form\"\r\n            onSubmit={e => this.props.onCityEditUpdate(this.props.editData, e)}\r\n          >\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2}>\r\n                Country\r\n              </Form.Label>\r\n              <Col sm={10} className=\"form-input\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"country\"\r\n                  onChange={this.onCountryChange.bind(this)}\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Select your option\r\n                  </option>\r\n                  {this.state.countryData.map((data, index) => (\r\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2}>\r\n                State\r\n              </Form.Label>\r\n              <Col sm={10} className=\"form-input\">\r\n                <Form.Control as=\"select\" name=\"state\" required>\r\n                  <option value=\"\" disabled selected>\r\n                    Select your option\r\n                  </option>\r\n                  {this.state.filteredStateData.map((data, index) => (\r\n                    <option\r\n                      value={data[\"_id\"]}\r\n                      selected={\r\n                        this.props.editData[\"state\"][0][\"_id\"] == data[\"_id\"]\r\n                      }\r\n                    >\r\n                      {data[\"StateName\"]}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2}>\r\n                City\r\n              </Form.Label>\r\n              <Col sm={10} className=\"form-input\">\r\n                <Form.Control\r\n                  type=\"Text\"\r\n                  placeholder=\"City\"\r\n                  name=\"City\"\r\n                  required\r\n                  onChange={value => this.onChange(value)}\r\n                  value={this.state.CityData}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} id=\"form-submit-button\">\r\n              <Col sm={{ span: 10, offset: 2 }}>\r\n                <Button type=\"submit\">Update</Button>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} id=\"form-cancel-button\">\r\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\r\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\r\n                  cancel\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CityForm;\r\n// onChange={value => this.onChange(value)}\r\n"]},"metadata":{},"sourceType":"module"}