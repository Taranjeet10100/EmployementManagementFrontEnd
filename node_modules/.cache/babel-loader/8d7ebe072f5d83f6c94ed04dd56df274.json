{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\new\\\\employee-management-system-frontend-react\\\\src\\\\component\\\\admin\\\\AdminProjectBidFormEdit.jsx\";\nimport React, { Component } from \"react\";\nimport \"./AdminProjectBidFormEdit.css\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass AdminProjectBidFormEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: '',\n      portalsInfo: [],\n      ProjectTitleData: this.props.editData[\"ProjectTitle\"],\n      ProjectURLData: this.props.editData[\"ProjectURL\"],\n      ProjectDescriptionData: this.props.editData[\"ProjectDesc\"],\n      EstimatedTimeData: this.props.editData[\"EstimatedTime\"],\n      RemarkData: this.props.editData[\"Remark\"]\n    };\n    this.portalsData = [];\n\n    this.handleChange = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.loadPortalsInfo = () => {\n      axios.get(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.portalsData = response.data;\n        this.portalsData = this.portalsData.filter(data => data[\"Status\"] == 1);\n        this.setState({\n          portalsInfo: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  onProjectTitleDataChange(e) {\n    this.setState({\n      ProjectTitleData: e.target.value\n    });\n  }\n\n  onProjectURLDataChange(e) {\n    this.setState({\n      ProjectURLData: e.target.value\n    });\n  }\n\n  onProjectDescriptionDataChange(e) {\n    this.setState({\n      ProjectDescriptionData: e.target.value\n    });\n  }\n\n  onPortalsDataChange(e) {\n    this.setState({\n      PortalsData: e.target.value\n    });\n  }\n\n  onEstimatedTimeDataChange(e) {\n    this.setState({\n      EstimatedTimeData: e.target.value\n    });\n  }\n\n  onEstimatedCostDataChange(e) {\n    this.setState({\n      EstimatedCostData: e.target.value\n    });\n  }\n\n  onResourceDataChange(e) {\n    this.setState({\n      ResourceData: e.target.value\n    });\n  }\n\n  onStatusDataChange(e) {\n    this.setState({\n      StatusData: e.target.value\n    });\n  }\n\n  onRemarkDataChange(e) {\n    this.setState({\n      RemarkData: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.loadPortalsInfo();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"role-form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Edit Project Bid Details\"), React.createElement(\"div\", {\n      id: \"role-form-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"form\",\n      onSubmit: e => this.props.onProjectBidEditUpdate(this.props.editData, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Project Title\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"Text\",\n      placeholder: \"Project Title\",\n      name: \"ProjectTitle\",\n      required: true,\n      value: this.state.ProjectTitleData,\n      onChange: value => this.onProjectTitleDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Project URL\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"Text\",\n      placeholder: \"Project URL\",\n      name: \"ProjectURL\",\n      required: true,\n      value: this.state.ProjectURLData,\n      onChange: value => this.onProjectURLDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Project Description\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      required: true,\n      value: this.state.ProjectDescriptionData,\n      onChange: value => this.onProjectDescriptionDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Portals\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"CompanyID\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.portalsData.map((data, index) => React.createElement(\"option\", {\n      value: data[\"_id\"],\n      selected: this.props.editData[\"portals\"][0][\"ID\"] == data[\"ID\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, data[\"PortalName\"]))))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Estimated Time\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"Estimated Time\",\n      name: \"EstimatedTime\",\n      required: true,\n      value: this.state.EstimatedTimeData,\n      onChange: value => this.onEstimatedTimeDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Estimated Cost\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"Estimated Cost\",\n      name: \"EstimatedCost\",\n      required: true,\n      value: this.state.EstimatedCostData,\n      onChange: value => this.onEstimatedCostDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Resource\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      selected: this.props.editData[\"ResourceID\"] == 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Resource1\"), React.createElement(\"option\", {\n      value: \"2\",\n      selected: this.props.editData[\"ResourceID\"] == 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Resource2\"), React.createElement(\"option\", {\n      value: \"3\",\n      selected: this.props.editData[\"ResourceID\"] == 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Resource3\")))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      selected: this.props.editData[\"Status\"] == 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"2\",\n      selected: this.props.editData[\"Status\"] == 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"option\", {\n      value: \"3\",\n      selected: this.props.editData[\"Status\"] == 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"option\", {\n      value: \"4\",\n      selected: this.props.editData[\"Status\"] == 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Award\")))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Remark\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      required: true,\n      value: this.state.RemarkData,\n      onChange: value => this.onRemarkDataChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-cancel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      id: \"form-cancel-button-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"reset\",\n      onClick: this.props.onFormEditClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"cancel\"))))));\n  }\n\n}\n\nexport default AdminProjectBidFormEdit;","map":{"version":3,"sources":["C:\\Users\\INTEL\\Desktop\\new\\employee-management-system-frontend-react\\src\\component\\admin\\AdminProjectBidFormEdit.jsx"],"names":["React","Component","axios","Form","Button","Col","Row","AdminProjectBidFormEdit","state","status","portalsInfo","ProjectTitleData","props","editData","ProjectURLData","ProjectDescriptionData","EstimatedTimeData","RemarkData","portalsData","handleChange","event","setState","target","value","loadPortalsInfo","get","headers","authorization","localStorage","getItem","then","response","data","filter","catch","error","console","log","onProjectTitleDataChange","e","onProjectURLDataChange","onProjectDescriptionDataChange","onPortalsDataChange","PortalsData","onEstimatedTimeDataChange","onEstimatedCostDataChange","EstimatedCostData","onResourceDataChange","ResourceData","onStatusDataChange","StatusData","onRemarkDataChange","componentDidMount","render","onProjectBidEditUpdate","map","index","span","offset","onFormEditClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AdminProjectBidFormEdit.css\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass AdminProjectBidFormEdit extends Component {\r\n  state = {\r\n    status: '',\r\n    portalsInfo: [],\r\n    ProjectTitleData: this.props.editData[\"ProjectTitle\"],\r\n    ProjectURLData: this.props.editData[\"ProjectURL\"],\r\n    ProjectDescriptionData: this.props.editData[\"ProjectDesc\"],\r\n    EstimatedTimeData: this.props.editData[\"EstimatedTime\"],\r\n\r\n    RemarkData: this.props.editData[\"Remark\"],\r\n\r\n  };\r\n  onProjectTitleDataChange(e) {\r\n    this.setState({ ProjectTitleData: e.target.value });\r\n  }\r\n  onProjectURLDataChange(e) {\r\n    this.setState({ ProjectURLData: e.target.value });\r\n  }\r\n  onProjectDescriptionDataChange(e) {\r\n    this.setState({ ProjectDescriptionData: e.target.value });\r\n  }\r\n  onPortalsDataChange(e) {\r\n    this.setState({ PortalsData: e.target.value });\r\n  }\r\n  onEstimatedTimeDataChange(e) {\r\n    this.setState({ EstimatedTimeData: e.target.value });\r\n  }\r\n  onEstimatedCostDataChange(e) {\r\n    this.setState({ EstimatedCostData: e.target.value });\r\n  }\r\n  onResourceDataChange(e) {\r\n    this.setState({ ResourceData: e.target.value });\r\n  }\r\n  onStatusDataChange(e) {\r\n    this.setState({ StatusData: e.target.value });\r\n  }\r\n  onRemarkDataChange(e) {\r\n    this.setState({ RemarkData: e.target.value });\r\n  }\r\n\r\n  portalsData = [];\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      status: event.target.value\r\n    });\r\n  }\r\n  loadPortalsInfo = () => {\r\n    axios\r\n      .get(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal\", {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.portalsData = response.data;\r\n\r\n        this.portalsData = this.portalsData.filter((data) => data[\"Status\"] == 1);\r\n\r\n        this.setState({ portalsInfo: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.loadPortalsInfo();\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2 id=\"role-form-title\">Edit Project Bid Details</h2>\r\n        <div id=\"role-form-outer-div\"><Form id=\"form\" onSubmit={e => this.props.onProjectBidEditUpdate(this.props.editData, e)}>\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Project Title\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control type=\"Text\" placeholder=\"Project Title\" name=\"ProjectTitle\" required\r\n                value={this.state.ProjectTitleData}\r\n                onChange={value => this.onProjectTitleDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Project URL\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control type=\"Text\" placeholder=\"Project URL\" name=\"ProjectURL\" required\r\n                value={this.state.ProjectURLData}\r\n                onChange={value => this.onProjectURLDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Project Description\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control as=\"textarea\" rows=\"3\" required\r\n                value={this.state.ProjectDescriptionData}\r\n                onChange={value => this.onProjectDescriptionDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Portals\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control as=\"select\" name=\"CompanyID\" required>\r\n                {this.portalsData.map((data, index) => (\r\n                  <option value={data[\"_id\"]}\r\n                    selected={\r\n                      this.props.editData[\"portals\"][0][\"ID\"] == data[\"ID\"]\r\n                    }\r\n                  >{data[\"PortalName\"]}</option>))}\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Estimated Time\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control type=\"number\" placeholder=\"Estimated Time\" name=\"EstimatedTime\" required\r\n                value={this.state.EstimatedTimeData}\r\n                onChange={value => this.onEstimatedTimeDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Estimated Cost\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control type=\"number\" placeholder=\"Estimated Cost\" name=\"EstimatedCost\" required\r\n                value={this.state.EstimatedCostData}\r\n                onChange={value => this.onEstimatedCostDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Resource\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control as=\"select\" required>\r\n                <option value=\"1\" selected={\r\n                  this.props.editData[\"ResourceID\"] == 1\r\n                }>Resource1</option>\r\n                <option value=\"2\" selected={this.props.editData[\"ResourceID\"] == 2}>Resource2</option>\r\n                <option value=\"3\" selected={this.props.editData[\"ResourceID\"] == 3}>Resource3</option>\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Status\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control as=\"select\" required>\r\n                <option value=\"1\" selected={this.props.editData[\"Status\"] == 1}>Open</option>\r\n                <option value=\"2\" selected={this.props.editData[\"Status\"] == 2}>Close</option>\r\n                <option value=\"3\" selected={this.props.editData[\"Status\"] == 3}>Cancel</option>\r\n                <option value=\"4\" selected={this.props.editData[\"Status\"] == 4}>Award</option>\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} >\r\n            <Form.Label column sm={2}>\r\n              Remark\r\n    </Form.Label>\r\n            <Col sm={10} className=\"form-input\">\r\n              <Form.Control as=\"textarea\" rows=\"3\" required value={this.state.RemarkData}\r\n                onChange={value => this.onRemarkDataChange(value)} />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} id=\"form-submit-button\">\r\n            <Col sm={{ span: 10, offset: 2 }}>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} id=\"form-cancel-button\">\r\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\r\n              <Button type=\"reset\" onClick={this.props.onFormEditClose}>cancel</Button>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form></div>\r\n        {/* </div>\r\n        </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminProjectBidFormEdit;\r\n"]},"metadata":{},"sourceType":"module"}