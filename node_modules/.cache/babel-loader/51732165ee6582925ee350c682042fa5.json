{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\new\\\\employee-management-system-frontend-react\\\\src\\\\component\\\\admin\\\\AdminPortal.jsx\";\nimport React, { Component } from \"react\";\nimport \"./AdminPortal.css\";\nimport axios from \"axios\";\nimport AdminPortalTable from \"./AdminPortalTable.jsx\";\nimport AdminPortalForm from \"./AdminPortalForm.jsx\";\nimport AdminPortalFormEdit from \"./AdminPortalFormEdit.jsx\"; // import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// function AdminPortalTableF() {\n//   return <AdminPortalTable/>;\n// }\n// function AdminPortalFormF() {\n//   return  <AdminPortalForm onPortalSubmit={handlePortalSubmit}/>;\n// }\n// function handlePortalSubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n// }\n\nclass AdminPortal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      table: true,\n      editForm: false,\n      editData: {},\n      addFormStatus: \"\",\n      editFormStatus: \"\"\n    };\n\n    this.handlePortalSubmit = event => {\n      event.preventDefault();\n      console.log(\"portal\", event.target[0].value, event.target[1].value, event.target[2].value);\n      console.log(\"portal status\", this.state.addFormStatus);\n      this.setState({\n        table: true\n      });\n      let body = {\n        PortalName: event.target[0].value,\n        Status: this.state.addFormStatus\n      }; //  let body= \"CompanyID=\" + event.target[0].value + \"&Portal=\" + event.target[1].value;\n      //  let body= \"FenilKaneria\";\n\n      axios.post(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal\", body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(res => {\n        this.setState({\n          table: false\n        });\n        this.setState({\n          table: true\n        });\n      }).catch(err => {\n        console.log(err);\n      }); // this.setState({ loading: true });\n      // this.login(event.target[0].value, event.target[1].value);\n      // event.target.reset();\n    };\n\n    this.handleAddPortal = () => {\n      console.log(\"clicked1\");\n      this.setState({\n        table: false\n      });\n    };\n\n    this.handleEditPortal = e => {\n      console.log(e);\n      console.log(\"clicked6\");\n      this.setState({\n        editForm: true\n      });\n      this.setState({\n        editData: e\n      });\n      this.setState({\n        editFormStatus: e[\"Status\"]\n      });\n    };\n\n    this.handleFormClose = () => {\n      console.log(\"clicked1\");\n      this.setState({\n        table: true\n      });\n    };\n\n    this.handleEditFormClose = () => {\n      console.log(\"clicked5\");\n      this.setState({\n        editForm: false\n      });\n    };\n\n    this.handleFormClose = () => {\n      console.log(\"clicked1\");\n      this.setState({\n        table: true\n      });\n    };\n\n    this.handleAddFormStatusChange = e => {\n      // console.log(e.currentTarget.value);\n      this.setState({\n        addFormStatus: e.currentTarget.value\n      });\n    };\n\n    this.handleEditFormStatusChange = e => {\n      // console.log(e.currentTarget.value);\n      this.setState({\n        editFormStatus: e.currentTarget.value\n      });\n    };\n\n    this.handlePortalEditUpdate = (info, formData1) => {\n      // this.setState({ table: true });\n      let body = {\n        // ...info,CompanyID:formData1,Portal:formData2\n        _id: info[\"_id\"],\n        PortalName: formData1,\n        Status: this.state.editFormStatus,\n        ID: info[\"ID\"]\n      };\n      console.log(\"update\", body);\n      axios.put(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal/\" + info[\"ID\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(res => {\n        // this.componentDidMount();\n        this.setState({\n          table: false\n        });\n        this.setState({\n          table: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        editForm: false\n      });\n    };\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (//  <Router>\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.table ? this.state.editForm ? React.createElement(AdminPortalFormEdit, {\n        onPortalEditUpdate: this.handlePortalEditUpdate,\n        onFormEditClose: this.handleEditFormClose,\n        editData: this.state.editData,\n        onStatusChange: this.handleEditFormStatusChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }) : React.createElement(AdminPortalTable, {\n        onAddPortal: this.handleAddPortal,\n        onEditPortal: this.handleEditPortal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : React.createElement(AdminPortalForm, {\n        onPortalSubmit: this.handlePortalSubmit,\n        onFormClose: this.handleFormClose,\n        onStatusChange: this.handleAddFormStatusChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })) //  </Router>\n\n    );\n  }\n\n}\n\nexport default AdminPortal;","map":{"version":3,"sources":["C:\\Users\\INTEL\\Desktop\\new\\employee-management-system-frontend-react\\src\\component\\admin\\AdminPortal.jsx"],"names":["React","Component","axios","AdminPortalTable","AdminPortalForm","AdminPortalFormEdit","AdminPortal","state","table","editForm","editData","addFormStatus","editFormStatus","handlePortalSubmit","event","preventDefault","console","log","target","value","setState","body","PortalName","Status","post","headers","authorization","localStorage","getItem","then","res","catch","err","handleAddPortal","handleEditPortal","e","handleFormClose","handleEditFormClose","handleAddFormStatusChange","currentTarget","handleEditFormStatusChange","handlePortalEditUpdate","info","formData1","_id","ID","put","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AdminPortal.css\";\r\nimport axios from \"axios\";\r\nimport AdminPortalTable from \"./AdminPortalTable.jsx\";\r\nimport AdminPortalForm from \"./AdminPortalForm.jsx\";\r\nimport AdminPortalFormEdit from \"./AdminPortalFormEdit.jsx\";\r\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// function AdminPortalTableF() {\r\n//   return <AdminPortalTable/>;\r\n// }\r\n// function AdminPortalFormF() {\r\n//   return  <AdminPortalForm onPortalSubmit={handlePortalSubmit}/>;\r\n// }\r\n\r\n// function handlePortalSubmit(e) {\r\n//   e.preventDefault();\r\n//   console.log(e);\r\n\r\n// }\r\n\r\nclass AdminPortal extends Component {\r\n  state = {\r\n    table: true,\r\n    editForm: false,\r\n    editData: {},\r\n    addFormStatus: \"\",\r\n    editFormStatus: \"\"\r\n  };\r\n\r\n  render() {\r\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\r\n    return (\r\n      //  <Router>\r\n      <React.Fragment>\r\n        {this.state.table ? (\r\n          this.state.editForm ? (\r\n            <AdminPortalFormEdit\r\n              onPortalEditUpdate={this.handlePortalEditUpdate}\r\n              onFormEditClose={this.handleEditFormClose}\r\n              editData={this.state.editData}\r\n              onStatusChange={this.handleEditFormStatusChange}\r\n            />\r\n          ) : (\r\n              <AdminPortalTable\r\n                onAddPortal={this.handleAddPortal}\r\n                onEditPortal={this.handleEditPortal}\r\n              />\r\n            )\r\n        ) : (\r\n            <AdminPortalForm\r\n              onPortalSubmit={this.handlePortalSubmit}\r\n              onFormClose={this.handleFormClose}\r\n              onStatusChange={this.handleAddFormStatusChange}\r\n            />\r\n          )}\r\n\r\n        {/* <div>fenil</div> */}\r\n        {/* <Route path=\"/admin/Portal/table\" exact component={AdminPortalTable} /> */}\r\n        {/* <Route path=\"/admin/Portal/form\" exact component={() => <AdminPortalForm onPortalSubmit={this.handlePortalSubmit} />} /> */}\r\n\r\n        {/* <AdminPortalTable/> */}\r\n      </React.Fragment>\r\n\r\n      //  </Router>\r\n    );\r\n  }\r\n  handlePortalSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(\"portal\", event.target[0].value, event.target[1].value, event.target[2].value);\r\n    console.log(\"portal status\", this.state.addFormStatus);\r\n    this.setState({ table: true });\r\n\r\n    let body = {\r\n      PortalName: event.target[0].value,\r\n      Status: this.state.addFormStatus\r\n    };\r\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&Portal=\" + event.target[1].value;\r\n    //  let body= \"FenilKaneria\";\r\n    axios\r\n      .post(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal\", body, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({ table: false });\r\n        this.setState({ table: true });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // this.setState({ loading: true });\r\n    // this.login(event.target[0].value, event.target[1].value);\r\n    // event.target.reset();\r\n  };\r\n  handleAddPortal = () => {\r\n    console.log(\"clicked1\");\r\n    this.setState({ table: false });\r\n  };\r\n  handleEditPortal = e => {\r\n    console.log(e);\r\n    console.log(\"clicked6\");\r\n    this.setState({ editForm: true });\r\n    this.setState({ editData: e });\r\n    this.setState({ editFormStatus: e[\"Status\"] });\r\n  };\r\n  handleFormClose = () => {\r\n    console.log(\"clicked1\");\r\n    this.setState({ table: true });\r\n  };\r\n  handleEditFormClose = () => {\r\n    console.log(\"clicked5\");\r\n    this.setState({ editForm: false });\r\n  };\r\n  handleFormClose = () => {\r\n    console.log(\"clicked1\");\r\n    this.setState({ table: true });\r\n  };\r\n  handleAddFormStatusChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    this.setState({\r\n      addFormStatus: e.currentTarget.value\r\n    });\r\n\r\n  };\r\n  handleEditFormStatusChange = (e) => {\r\n    // console.log(e.currentTarget.value);\r\n    this.setState({\r\n      editFormStatus: e.currentTarget.value\r\n    });\r\n\r\n  };\r\n  handlePortalEditUpdate = (info, formData1) => {\r\n    // this.setState({ table: true });\r\n    let body = {\r\n      // ...info,CompanyID:formData1,Portal:formData2\r\n      _id: info[\"_id\"],\r\n      PortalName: formData1,\r\n      Status: this.state.editFormStatus,\r\n      ID: info[\"ID\"],\r\n    };\r\n    console.log(\"update\", body);\r\n    axios\r\n      .put(\"https://employee-management-fk-api.herokuapp.com/api/admin/portal/\" + info[\"ID\"], body, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        // this.componentDidMount();\r\n        this.setState({ table: false });\r\n        this.setState({ table: true });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    this.setState({ editForm: false });\r\n  };\r\n}\r\n\r\nexport default AdminPortal;\r\n"]},"metadata":{},"sourceType":"module"}